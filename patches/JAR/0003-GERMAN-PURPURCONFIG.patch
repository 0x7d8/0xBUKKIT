From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: root <root@ROBERT-PC.localdomain>
Date: Sat, 11 Jun 2022 09:47:25 +0200
Subject: [PATCH] GERMAN PURPURCONFIG

pur

pur

pur

pur

B7 - QUALITY OF LIFE

diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index 205f351bb9056ea9d66417f0edd1ed6741bf6993..ad808058d99af0bc1569810f17d2f1904b078e7d 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -38,15 +38,8 @@ import java.util.logging.Level;
 
 @SuppressWarnings("unused")
 public class PurpurConfig {
-    private static final String HEADER = "This is the main configuration file for Purpur.\n"
-            + "As you can see, there's tons to configure. Some options may impact gameplay, so use\n"
-            + "with caution, and make sure you know what each option does before configuring.\n"
-            + "\n"
-            + "If you need help with the configuration or have any questions related to Purpur,\n"
-            + "join us in our Discord guild.\n"
-            + "\n"
-            + "Website: https://purpurmc.org \n"
-            + "Docs: https://purpurmc.org/docs \n";
+    private static final String HEADER = "PURPUR KONFIGURATION\n" // 0xBUKKIT
+            + "https://purpurmc.org/discord"; // 0xBUKKIT
     private static File CONFIG_FILE;
     public static YamlConfiguration config;
 
@@ -62,7 +55,7 @@ public class PurpurConfig {
             config.load(CONFIG_FILE);
         } catch (IOException ignore) {
         } catch (InvalidConfigurationException ex) {
-            Bukkit.getLogger().log(Level.SEVERE, "Could not load purpur.yml, please correct your syntax errors", ex);
+            Bukkit.getLogger().log(Level.SEVERE, "Konnte purpur.yml nicht laden, fixe die fehler", ex); // 0xBUKKIT
             throw Throwables.propagate(ex);
         }
         config.options().header(HEADER);
@@ -168,19 +161,19 @@ public class PurpurConfig {
         return builder.build();
     }
 
-    public static String cannotRideMob = "<red>You cannot mount that mob";
-    public static String afkBroadcastAway = "<yellow><italic>%s is now AFK";
-    public static String afkBroadcastBack = "<yellow><italic>%s is no longer AFK";
+    public static String cannotRideMob = "<red>Du kannst das Mob nicht reiten."; // 0xBUKKIT
+    public static String afkBroadcastAway = "<yellow><italic>%s ist nun AFK"; // 0xBUKKIT
+    public static String afkBroadcastBack = "<yellow><italic>%s ist nun nicht AFK"; // 0xBUKKIT
     public static String afkTabListPrefix = "[AFK] ";
     public static String afkTabListSuffix = "";
-    public static String creditsCommandOutput = "<green>%s has been shown the end credits";
-    public static String demoCommandOutput = "<green>%s has been shown the demo screen";
-    public static String pingCommandOutput = "<green>%s's ping is %sms";
-    public static String ramCommandOutput = "<green>Ram Usage: <used>/<xmx> (<percent>)";
-    public static String rambarCommandOutput = "<green>Rambar toggled <onoff> for <target>";
-    public static String tpsbarCommandOutput = "<green>Tpsbar toggled <onoff> for <target>";
-    public static String dontRunWithScissors = "<red><italic>Don't run with scissors!";
-    public static String uptimeCommandOutput = "<green>Server uptime is <uptime>";
+    public static String creditsCommandOutput = "<white>[<gray>Server<white>] <green>Die End Credits wurden <gold>%s <green>angezeigt."; // 0xBUKKIT
+    public static String demoCommandOutput = "<white>[<gray>Server<white>] <green>Der Demo Screen wurde <gold>%s <green<gezeigt."; // 0xBUKKIT
+    public static String pingCommandOutput = "<white>[<gray>Server<white>] <green>Der Ping von <gold>%s <green>ist <gold>%sms<green>."; // 0xBUKKIT
+    public static String ramCommandOutput = "<white>[<gray>Server<white>] <green>RAM Nutzung: <gold><used><white>/<gold><xmx>"; // 0xBUKKIT
+    public static String rambarCommandOutput = "<white>[<gray>Server<white>] <green>RAMBAR <gold><onoff> <green>gemacht für <gold><target><green>."; // 0xBUKKIT
+    public static String tpsbarCommandOutput = "<white>[<gray>Server<white>] <green>TPSBAR <gold><onoff> <green>gemacht für <gold><target><green>."; // 0xBUKKIT
+    public static String dontRunWithScissors = "<white>[<gray>Server<white>] <red>Renne nicht mit Scheren!"; // 0xBUKKIT
+    public static String uptimeCommandOutput = "<white>[<gray>Server<white>] <green>Server läuft schon seit <gold><uptime><green>."; // 0xBUKKIT
     public static String unverifiedUsername = "default";
     public static String sleepSkippingNight = "default";
     public static String sleepingPlayersPercent = "default";
@@ -259,6 +252,7 @@ public class PurpurConfig {
         disableGiveCommandDrops = getBoolean("settings.disable-give-dropping", disableGiveCommandDrops);
     }
 
+<<<<<<< HEAD
     public static String commandRamBarTitle = "<gray>Ram<yellow>:</yellow> <used>/<xmx> (<percent>)";
     public static BossBar.Overlay commandRamBarProgressOverlay = BossBar.Overlay.NOTCHED_20;
     public static BossBar.Color commandRamBarProgressColorGood = BossBar.Color.GREEN;
@@ -269,6 +263,9 @@ public class PurpurConfig {
     public static String commandRamBarTextColorLow = "<gradient:#ff5555:#aa0000><text></gradient>";
     public static int commandRamBarTickInterval = 20;
     public static String commandTPSBarTitle = "<gray>TPS<yellow>:</yellow> <tps> MSPT<yellow>:</yellow> <mspt> Ping<yellow>:</yellow> <ping>ms";
+=======
+    public static String commandTPSBarTitle = "<gray>TPS <tps> MSPT <mspt> Ping <ping>ms"; // 0xBUKKIT
+>>>>>>> GERMAN PURPURCONFIG
     public static BossBar.Overlay commandTPSBarProgressOverlay = BossBar.Overlay.NOTCHED_20;
     public static TPSBarTask.FillMode commandTPSBarProgressFillMode = TPSBarTask.FillMode.MSPT;
     public static BossBar.Color commandTPSBarProgressColorGood = BossBar.Color.GREEN;
@@ -278,7 +275,7 @@ public class PurpurConfig {
     public static String commandTPSBarTextColorMedium = "<gradient:#ffff55:#ffaa00><text></gradient>";
     public static String commandTPSBarTextColorLow = "<gradient:#ff5555:#aa0000><text></gradient>";
     public static int commandTPSBarTickInterval = 20;
-    public static String commandCompassBarTitle = "S  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  W  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  N  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  E  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  S  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  W  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  N  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  E  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  ";
+    public static String commandCompassBarTitle = "S  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  W  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  N  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  E  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SE  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  S  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  W  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NW  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  N  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  NO  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  O  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  SO  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  \u25C8  \u00B7  "; // 0xBUKKIT
     public static BossBar.Overlay commandCompassBarProgressOverlay = BossBar.Overlay.PROGRESS;
     public static BossBar.Color commandCompassBarProgressColor = BossBar.Color.BLUE;
     public static float commandCompassBarProgressPercent = 1.0F;
@@ -287,14 +284,14 @@ public class PurpurConfig {
     public static int commandFillMaxArea = 32768;
     public static boolean hideHiddenPlayersFromEntitySelector = false;
     public static String uptimeFormat = "<days><hours><minutes><seconds>";
-    public static String uptimeDay = "%02d day, ";
-    public static String uptimeDays = "%02d days, ";
-    public static String uptimeHour = "%02d hour, ";
-    public static String uptimeHours = "%02d hours, ";
-    public static String uptimeMinute = "%02d minute, and ";
-    public static String uptimeMinutes = "%02d minutes, and ";
-    public static String uptimeSecond = "%02d second";
-    public static String uptimeSeconds = "%02d seconds";
+    public static String uptimeDay = "%02d Tag, "; // 0xBUKKIT
+    public static String uptimeDays = "%02d Tage, "; // 0xBUKKIT
+    public static String uptimeHour = "%02d Stunde, "; // 0xBUKKIT
+    public static String uptimeHours = "%02d Stunden, "; // 0xBUKKIT
+    public static String uptimeMinute = "%02d Minute, und "; // 0xBUKKIT
+    public static String uptimeMinutes = "%02d Minuten, und "; // 0xBUKKIT
+    public static String uptimeSecond = "%02d Sekunde"; // 0xBUKKIT
+    public static String uptimeSeconds = "%02d Sekunden"; // 0xBUKKIT
     private static void commandSettings() {
         commandRamBarTitle = getString("settings.command.rambar.title", commandRamBarTitle);
         commandRamBarProgressOverlay = BossBar.Overlay.valueOf(getString("settings.command.rambar.overlay", commandRamBarProgressOverlay.name()));
@@ -450,11 +447,11 @@ public class PurpurConfig {
         disableChorusPlantUpdates = getBoolean("settings.blocks.disable-chorus-plant-updates", disableChorusPlantUpdates);
     }
 
-    public static boolean loggerSuppressInitLegacyMaterialError = false;
+    public static boolean loggerSuppressInitLegacyMaterialError = true;
     public static boolean loggerSuppressIgnoredAdvancementWarnings = false;
-    public static boolean loggerSuppressUnrecognizedRecipeErrors = false;
+    public static boolean loggerSuppressUnrecognizedRecipeErrors = true;
     public static boolean loggerSuppressSetBlockFarChunk = false;
-    public static boolean loggerSuppressSentExpiredChat = false;
+    public static boolean loggerSuppressSentExpiredChat = true;
     private static void loggerSettings() {
         loggerSuppressInitLegacyMaterialError = getBoolean("settings.logger.suppress-init-legacy-material-errors", loggerSuppressInitLegacyMaterialError);
         loggerSuppressIgnoredAdvancementWarnings = getBoolean("settings.logger.suppress-ignored-advancement-warnings", loggerSuppressIgnoredAdvancementWarnings);
