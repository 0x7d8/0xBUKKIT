From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: root <root@ROBERT-PC.localdomain>
Date: Sat, 11 Jun 2022 09:55:11 +0200
Subject: [PATCH] GERMAN SPIGOTCONFIG

spi

spi

spi

B7 - HIGHER THRESHOLD

diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 5d162f59fc5ef9adf7fa762b137bbcfca745d9c5..78e5b0029688d4a0749f9796839f94d8c0b44f60 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -21,6 +21,7 @@ import net.minecraft.world.entity.ai.attributes.RangedAttribute;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.core.LoggerContext;
 import org.apache.logging.log4j.core.config.Configuration;
+import net.kyori.adventure.text.minimessage.MiniMessage; // 0xBUKKIT
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
 import org.bukkit.command.Command;
@@ -32,17 +33,8 @@ public class SpigotConfig
 {
 
     private static File CONFIG_FILE;
-    private static final String HEADER = "This is the main configuration file for Spigot.\n"
-            + "As you can see, there's tons to configure. Some options may impact gameplay, so use\n"
-            + "with caution, and make sure you know what each option does before configuring.\n"
-            + "For a reference for any variable inside this file, check out the Spigot wiki at\n"
-            + "http://www.spigotmc.org/wiki/spigot-configuration/\n"
-            + "\n"
-            + "If you need help with the configuration or have any questions related to Spigot,\n"
-            + "join us at the Discord or drop by our forums and leave a post.\n"
-            + "\n"
-            + "Discord: https://www.spigotmc.org/go/discord\n"
-            + "Forums: http://www.spigotmc.org/\n";
+    private static final String HEADER = "SPIGOT KONFIGURATION\n" // 0xBUKKIT
+            + "https://www.spigotmc.org/go/discord"; // 0xBUKKIT
     /*========================================================================*/
     public static YamlConfiguration config;
     static int version;
@@ -61,7 +53,7 @@ public class SpigotConfig
         {
         } catch ( InvalidConfigurationException ex )
         {
-            Bukkit.getLogger().log( Level.SEVERE, "Could not load spigot.yml, please correct your syntax errors", ex );
+            Bukkit.getLogger().log( Level.SEVERE, "Konnte spigot.yml nicht laden, fixxe deine fehler", ex ); // 0xBUKKIT
             throw Throwables.propagate( ex );
         }
 
@@ -197,8 +189,8 @@ public class SpigotConfig
     public static String whitelistMessage;
     public static String unknownCommandMessage;
     public static String serverFullMessage;
-    public static String outdatedClientMessage = "Outdated client! Please use {0}";
-    public static String outdatedServerMessage = "Outdated server! I\'m still on {0}";
+    public static String outdatedClientMessage = "&cFalsche Version! Bitte nutz &6{0}"; // 0xBUKKIT
+    public static String outdatedServerMessage = "&cFalsche Version! Bitte nutz &6{0}"; // 0xBUKKIT
     private static String transform(String s)
     {
         return ChatColor.translateAlternateColorCodes( '&', s ).replaceAll( "\\\\n", "\n" );
@@ -211,9 +203,9 @@ public class SpigotConfig
             SpigotConfig.set( "messages.outdated-server", SpigotConfig.outdatedServerMessage );
         }
 
-        SpigotConfig.whitelistMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.whitelist", "You are not whitelisted on this server!" ) );
-        SpigotConfig.unknownCommandMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.unknown-command", "Unknown command. Type \"/help\" for help." ) );
-        SpigotConfig.serverFullMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.server-full", "The server is full!" ) );
+        SpigotConfig.whitelistMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.whitelist", "&cDu bist nicht auf der Whitelist!" ) ); // 0xBUKKIT
+        SpigotConfig.unknownCommandMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.unknown-command", "&f[&7Server&f] &cUnbekannter Befehl." ) ); // 0xBUKKIT
+        SpigotConfig.serverFullMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.server-full", "&cDer Server ist voll!" ) ); // 0xBUKKIT
         SpigotConfig.outdatedClientMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.outdated-client", SpigotConfig.outdatedClientMessage ) );
         SpigotConfig.outdatedServerMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.outdated-server", SpigotConfig.outdatedServerMessage ) );
     }
@@ -227,7 +219,7 @@ public class SpigotConfig
         SpigotConfig.timeoutTime = SpigotConfig.getInt( "settings.timeout-time", SpigotConfig.timeoutTime );
         SpigotConfig.restartOnCrash = SpigotConfig.getBoolean( "settings.restart-on-crash", SpigotConfig.restartOnCrash );
         SpigotConfig.restartScript = SpigotConfig.getString( "settings.restart-script", SpigotConfig.restartScript );
-        SpigotConfig.restartMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.restart", "Server is restarting" ) );
+        SpigotConfig.restartMessage = SpigotConfig.transform( SpigotConfig.getString( "messages.restart", "&eServer startet neu" ) ); // 0xBUKKIT
         SpigotConfig.commands.put( "restart", new RestartCommand( "restart" ) );
         // WatchdogThread.doStart( timeoutTime, restartOnCrash ); // Paper - moved to after paper config initialization
     }
@@ -341,13 +333,13 @@ public class SpigotConfig
     public static double movedWronglyThreshold;
     private static void movedWronglyThreshold()
     {
-        SpigotConfig.movedWronglyThreshold = SpigotConfig.getDouble( "settings.moved-wrongly-threshold", 0.0625D );
+        SpigotConfig.movedWronglyThreshold = SpigotConfig.getDouble( "settings.moved-wrongly-threshold", 1000.0625D );
     }
 
     public static double movedTooQuicklyMultiplier;
     private static void movedTooQuicklyMultiplier()
     {
-        SpigotConfig.movedTooQuicklyMultiplier = SpigotConfig.getDouble( "settings.moved-too-quickly-multiplier", 10.0D );
+        SpigotConfig.movedTooQuicklyMultiplier = SpigotConfig.getDouble( "settings.moved-too-quickly-multiplier", 10000.0D );
     }
 
     public static double maxHealth = 2048;
