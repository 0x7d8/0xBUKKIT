From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Encode42 <me@encode42.dev>
Date: Thu, 16 Sep 2021 20:39:45 -0400
Subject: [PATCH] SERVER REBRAND

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

ver

diff --git a/build.gradle.kts b/build.gradle.kts
index a9acec9feef3c5322ce2c312cd8800bcdaca0947..2e28eb782d28a34e727ac2e3dcec4e38d967d35e 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,7 +9,7 @@ plugins {
 }
 
 dependencies {
-    implementation(project(":purpur-api")) // Purpur
+    implementation(project(":0xBUKKIT-API")) // Purpur // 0xBUKKIT
     // Pufferfish start
     implementation("io.papermc.paper:paper-mojangapi:1.19.2-R0.1-SNAPSHOT") { // Purpur
         exclude("io.papermc.paper", "paper-api")
@@ -87,7 +87,7 @@ tasks.jar {
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
             "Implementation-Title" to "CraftBukkit",
-            "Implementation-Version" to "git-Purpur-$implementationVersion",// Purpur
+            "Implementation-Version" to "0xBUKKIT-$implementationVersion",// Purpur // 0xBUKKIT
             "Implementation-Vendor" to date, // Paper
             "Specification-Title" to "Bukkit",
             "Specification-Version" to project.version,
diff --git a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
index fba5dbdb7bcbb55400ef18342c9b54612972a718..ad51dd800ba37ace072c04620c34e6d4c0dcb6ca 100644
--- a/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
+++ b/src/main/java/com/destroystokyo/paper/PaperVersionFetcher.java
@@ -18,11 +18,9 @@ import java.net.URL;
 import java.util.stream.StreamSupport;
 
 public class PaperVersionFetcher implements VersionFetcher {
-    private static final java.util.regex.Pattern VER_PATTERN = java.util.regex.Pattern.compile("^([0-9\\.]*)\\-.*R"); // R is an anchor, will always give '-R' at end
-    // Purpur start
-    private static final String DOWNLOAD_PAGE = "https://purpurmc.org/downloads";
+    private static final java.util.regex.Pattern VER_PATTERN = java.util.regex.Pattern.compile("(?!^ +$)^.+$"); // Allow any Value except Spaces and Empty - 0xBUKKIT
+    private static final String DOWNLOAD_PAGE = "https://jenkins.rjansen.de/job/0xBUKKIT"; // 0xBUKKIT
     private static int distance = -2; public int distance() { return distance; }
-    // Purpur end
     private static @Nullable String mcVer;
 
     @Override
@@ -33,8 +31,8 @@ public class PaperVersionFetcher implements VersionFetcher {
     @Nonnull
     @Override
     public Component getVersionMessage(@Nonnull String serverVersion) {
-        String[] parts = serverVersion.substring("git-Purpur-".length()).split("[-\\s]"); // Purpur
-        final Component updateMessage = getUpdateStatusMessage("PurpurMC/Purpur", "ver/" + getMinecraftVersion(), parts[0]); // Purpur
+        String[] parts = serverVersion.substring("0xBUKKIT-".length()).split("[-\\s]"); // Purpur // 0xBUKKIT
+        final Component updateMessage = getUpdateStatusMessage("rotvproHD/0xBUKKIT", "ver/" + getMinecraftVersion(), parts[0]); // Purpur // 0xBUKKIT
         final Component history = getHistory();
 
         return history != null ? Component.join(net.kyori.adventure.text.JoinConfiguration.separator(Component.newline()), history, updateMessage) : updateMessage; // Purpur
@@ -47,8 +45,8 @@ public class PaperVersionFetcher implements VersionFetcher {
                 String result = matcher.group();
                 mcVer = result.substring(0, result.length() - 2); // strip 'R' anchor and trailing '-'
             } else {
-                org.bukkit.Bukkit.getLogger().warning("Unable to match version to pattern! Report to Purpur!"); // Purpur
-                org.bukkit.Bukkit.getLogger().warning("Pattern: " + VER_PATTERN.toString());
+                org.bukkit.Bukkit.getLogger().warning("Konnte nicht Version verarbeiten."); // Purpur // 0xBUKKIT
+                org.bukkit.Bukkit.getLogger().warning("Muster: " + VER_PATTERN.toString()); // 0xBUKKIT
                 org.bukkit.Bukkit.getLogger().warning("Version: " + org.bukkit.Bukkit.getBukkitVersion());
             }
         }
@@ -58,6 +56,7 @@ public class PaperVersionFetcher implements VersionFetcher {
 
     private static Component getUpdateStatusMessage(@Nonnull String repo, @Nonnull String branch, @Nonnull String versionInfo) {
         //int distance; // Purpur - use field
+        // 0xBUKKIT start
         try {
             int jenkinsBuild = Integer.parseInt(versionInfo);
             distance = fetchDistanceFromSiteApi(jenkinsBuild, getMinecraftVersion());
@@ -65,21 +64,20 @@ public class PaperVersionFetcher implements VersionFetcher {
             versionInfo = versionInfo.replace("\"", "");
             distance = fetchDistanceFromGitHub(repo, branch, versionInfo);
         }
+        /*
+        versionInfo = versionInfo.replace("\"", "");
+        distance = fetchDistanceFromGitHub(repo, branch, versionInfo);
+        */// 0xBUKKIT end
 
         switch (distance) {
             case -1:
-                return Component.text("* Error obtaining version information", NamedTextColor.RED); // Purpur
+                return org.bukkit.ChatColor.parseMM("<white>[<grey>Server<white>] <yellow>Fehler beim ergattern von Versions Informationen."); // Purpur // 0xBUKKIT
             case 0:
-                return Component.text("* You are running the latest version", NamedTextColor.GREEN); // Purpur
+                return org.bukkit.ChatColor.parseMM("<white>[<grey>Server<white>] <green>Du bist auf der neuesten Version!"); // Purpur // 0xBUKKIT
             case -2:
-                return Component.text("* Unknown version", NamedTextColor.RED); // Purpur
+                return org.bukkit.ChatColor.parseMM("<white>[<grey>Server<white>] <red>Unbekannte Version!"); // Purpur // 0xBUKKIT
             default:
-                return Component.text("* You are " + distance + " version(s) behind", NamedTextColor.YELLOW) // Purpur
-                        .append(Component.newline())
-                        .append(Component.text("Download the new version at: ")
-                                .append(Component.text(DOWNLOAD_PAGE, NamedTextColor.GOLD)
-                                        .hoverEvent(Component.text("Click to open", NamedTextColor.WHITE))
-                                        .clickEvent(ClickEvent.openUrl(DOWNLOAD_PAGE))));
+                return org.bukkit.ChatColor.parseMM("<white>[<grey>Server<white>] <yellow>Du bist <gold>%s <yellow>Builds hinterher! Downloads: <gold>https://jenkins.rjansen.de/job/0xBUKKIT", distance); // Purpur // 0xBUKKIT
         }
     }
 
@@ -87,11 +85,11 @@ public class PaperVersionFetcher implements VersionFetcher {
         if (siteApiVersion == null) { return -1; }
         try {
             try (BufferedReader reader = Resources.asCharSource(
-                new URL("https://api.purpurmc.org/v2/purpur/" + siteApiVersion), // Purpur
+                new URL("https://api.rjansen.de/v2/0xBUKKIT/1.19.2"), // 0xBUKKIT
                 Charsets.UTF_8
             ).openBufferedStream()) {
                 JsonObject json = new Gson().fromJson(reader, JsonObject.class);
-                int latest = json.getAsJsonObject("builds").getAsJsonPrimitive("latest").getAsInt(); // Purpur
+                int latest = json.getAsJsonObject("builds").getAsJsonPrimitive("latest").getAsInt(); // Purpur // 0xBUKKIT
                 return latest - jenkinsBuild;
             } catch (JsonSyntaxException ex) {
                 ex.printStackTrace();
@@ -108,7 +106,7 @@ public class PaperVersionFetcher implements VersionFetcher {
         try {
             HttpURLConnection connection = (HttpURLConnection) new URL("https://api.github.com/repos/" + repo + "/compare/" + branch + "..." + hash).openConnection();
             connection.connect();
-            if (connection.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) return -2; // Unknown commit
+            if (connection.getResponseCode() == HttpURLConnection.HTTP_NOT_FOUND) return -2; // 0xBUKKIT
             try (BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), Charsets.UTF_8))) {
                 JsonObject obj = new Gson().fromJson(reader, JsonObject.class);
                 String status = obj.get("status").getAsString();
@@ -142,6 +140,6 @@ public class PaperVersionFetcher implements VersionFetcher {
             return null;
         }
 
-        return org.bukkit.ChatColor.parseMM("<grey>Previous: %s", oldVersion); // Purpur
+        return org.bukkit.ChatColor.parseMM("<white>[<grey>Server<white>] <green>Vorherige Version: <gold>%s", oldVersion); // Purpur // 0xBUKKIT
     }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 000007e77e73153d3d634a3ab5882916bd8b43a3..efb3e018a4dba9ad6099b448066b1a8949ea74be 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -246,7 +246,7 @@ import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
 
 public final class CraftServer implements Server {
-    private final String serverName = "Purpur"; // Paper // Purpur
+    private final String serverName = "0xBUKKIT"; // Paper // Purpur // 0xBUKKIT
     private final String serverVersion;
     private final String bukkitVersion = Versioning.getBukkitVersion();
     private final Logger logger = Logger.getLogger("Minecraft");
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index fb87620c742ff7912f5e8ccd2a7930dd605576d9..8351b43a49a0b28a40864c923581683179faae6b 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/org.purpurmc.purpur/purpur-api/pom.properties"); // Purpur
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/0xBUKKIT/0xBUKKIT-API/pom.properties"); // Purpur // 0xBUKKIT
         Properties properties = new Properties();
 
         if (stream != null) {
diff --git a/src/main/java/org/purpurmc/purpur/PurpurConfig.java b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
index d44b8ce90db7c6c27f71aa841d6fb64b159b7b42..61b2e901bdaa2df2159c0a832c5f4be44232e65b 100644
--- a/src/main/java/org/purpurmc/purpur/PurpurConfig.java
+++ b/src/main/java/org/purpurmc/purpur/PurpurConfig.java
@@ -235,7 +235,7 @@ public class PurpurConfig {
         if (!TimingsManager.hiddenConfigs.contains("settings.seed")) TimingsManager.hiddenConfigs.add("settings.seed");
     }
 
-    public static String serverModName = "Purpur";
+    public static String serverModName = "0xBUKKIT"; // 0xBUKKIT
     private static void serverModName() {
         serverModName = getString("settings.server-mod-name", serverModName);
     }
